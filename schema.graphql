# ACCOUNTS

type Account {
  id: ID!
  address: String! @index
  idleBalances: [AccountIdleBalance!]! @derivedFrom(field: "address")
  earnBalances: [AccountEarnBalance!]! @derivedFrom(field: "userAddress")
  historicalIdleBalances: [HistoricalAccountIdleBalance!]! @derivedFrom(field: "address")
}

# IDLE

type AccountIdleBalance {
  id: ID!
  address: String! @index
  balance: BigInt!
  token: Token! @index
}

type HistoricalAccountIdleBalance {
  id: ID!
  address: String! @index
  balance: BigInt!
  token: Token! @index
  timestamp: BigInt! @index
}

# UTILITIES

type Token {
  id: ID!
  name: String
  symbol: String
  decimals: Int
}

# EARN

enum Protocol {
  Venus
  Syncswap
  Clagg
}

type PoolRegistry {
  id: ID!
  protocol: Protocol!
  pool: String! @index
  venusPool: [VenusPool!]! @derivedFrom(field: "address")
  syncswapPool: [SyncswapPool!]! @derivedFrom(field: "address")
}

type AccountEarnBalance {
  id: ID!
  userAddress: String! @index
  shareBalance: BigInt!
  protocol: Protocol! @index
  venusPool: VenusPool @index
  syncswapPool: SyncswapPool @index
  claggPool: ClaggPool @index
}

type VenusPool {
  id: ID!
  address: String! @index
  name: String
  symbol: String
  underlyingToken: Token @index
  exchangeRate: BigInt!
}

type SyncswapPool {
  id: ID!
  name: String
  symbol: String
  address: String! @index
  underlyingToken: Token @index
  underlyingToken2: Token @index
  poolType: BigInt
  token0PrecisionMultiplier: BigInt
  token1PrecisionMultiplier: BigInt
  reserve0: BigInt!
  reserve1: BigInt!
  totalSupply: BigInt!
}

type ClaggPool {
  id: ID!
  address: String! @index
  totalShares: BigInt!
  totalSupply: BigInt!
  poolRegistry: [PoolRegistry!]! @derivedFrom(field: "pool")
}
