// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var HypersyncClient = require("@envio-dev/hypersync-client");

function makeTopicSelection(topic0Opt, topic1Opt, topic2Opt, topic3Opt) {
  var topic0 = topic0Opt !== undefined ? topic0Opt : [];
  var topic1 = topic1Opt !== undefined ? topic1Opt : [];
  var topic2 = topic2Opt !== undefined ? topic2Opt : [];
  var topic3 = topic3Opt !== undefined ? topic3Opt : [];
  return [
          topic0,
          topic1,
          topic2,
          topic3
        ];
}

function makeLogSelection(address, topics) {
  return {
          address: address,
          topics: topics
        };
}

var QueryTypes = {
  makeTopicSelection: makeTopicSelection,
  makeLogSelection: makeLogSelection
};

var ResponseTypes = {};

var defaultToken = "3dc856dd-b0ea-494f-b27e-017b8b6b7e07";

function make(url, bearerToken, httpReqTimeoutMillis, maxNumRetries) {
  return HypersyncClient.HypersyncClient.new({
              url: url,
              bearerToken: Belt_Option.getWithDefault(bearerToken, defaultToken),
              httpReqTimeoutMillis: httpReqTimeoutMillis,
              maxNumRetries: maxNumRetries,
              enableChecksumAddresses: true
            });
}

function toUnderlying(_d) {
  while(true) {
    var d = _d;
    if (Array.isArray(d)) {
      return Belt_Array.map(d, toUnderlying);
    }
    switch (typeof d) {
      case "boolean" :
          return d;
      case "string" :
          return d;
      case "bigint" :
          return d;
      case "object" :
          _d = d.val;
          continue ;
      
    }
  };
}

var Decoder = {
  toUnderlying: toUnderlying
};

exports.QueryTypes = QueryTypes;
exports.ResponseTypes = ResponseTypes;
exports.defaultToken = defaultToken;
exports.make = make;
exports.Decoder = Decoder;
/* @envio-dev/hypersync-client Not a pure module */
